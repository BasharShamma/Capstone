def totalConsumption(usage, consumption):
    total_consumpation = 0
    for r in consumption:
        total_consumpation = total_consumpation + (r.consumption_watt * usage[r.name])
        total_consumpation = total_consumpation + (
            r.standby_duration_hours * r.standby_power_consumption
        )
    return total_consumpation / 1000


def calculate_system_loss_factor(
    panel_efficiency, inverter_efficiency, wiring_efficiency, soiling_loss, other_losses
):
    """
    Calculate the system loss factor based on individual loss percentages.

    Args:
    panel_efficiency (float): Efficiency of solar panels (in percentage).
    inverter_efficiency (float): Efficiency of the inverter (in percentage).
    wiring_efficiency (float): Efficiency of wiring (in percentage).
    soiling_loss (float): Percentage of loss due to soiling.
    other_losses (float): Percentage of other losses.

    Returns:
    float: System loss factor.
    """
    total_losses_percentage = (
        panel_efficiency
        + inverter_efficiency
        + wiring_efficiency
        + soiling_loss
        + other_losses
    )
    print(total_losses_percentage)
    system_loss_factor = 1 - (total_losses_percentage / 100)
    return system_loss_factor


def EnergyProduction(
    panel_efficiency,
    panel_area,
    time,
    panel_voltage,
    solar_irradiance,
    n,
    derating_factor,
    slf,
):
    """
        E = (A * I * η * (1 - Derating Factor) * t * G * (1 - System Loss Factor)(number of panels)

    Where:

    •	E: Represents the daily energy production of one solar panel (kWh/day) -
    •	A: Area of one solar panel (m²) - You can find this in the panel specifications.
    •	I: Current generated by the solar panel (Amps) - This value is typically provided by the manufacturer and can be converted to Amps per Watt (A/W) by dividing the maximum power rating by the panel voltage (at maximum power point). Then multiply this value by the panel's voltage to get Amps. (I = Pmax / Vmp * Vmp).
    •	η: Efficiency of the solar panels (decimal value representing percentage) - This information is provided by the solar panel manufacturer.
    •	t: Time period (hours) - In this case, use the average daylight hours for your location (typically around 5-6 hours).
    •	G: Average daily solar irradiance data (kWh/m²/day) you obtained earlier.

    """
    result = (
        panel_area
        * panel_voltage
        * panel_efficiency
        * (1 - derating_factor)
        * time
        * solar_irradiance
        * (1 - slf)
        * n
    )
    print(result)
    return result
    # result=(panel.)


# Given values
panel_efficiency = 0.20  # Panel Efficiency in percentage
inverter_efficiency = 0.95  # Inverter Efficiency as a decimal
wiring_efficiency = 0.98  # Wiring Efficiency as a decimal
soiling_loss = 2  # Soiling Loss in percentage
other_losses = 1  # Other Losses in percentage

# Calculate System Loss Factor
system_loss_factor = calculate_system_loss_factor(
    panel_efficiency, inverter_efficiency, wiring_efficiency, soiling_loss, other_losses
)

print("System Loss Factor:", system_loss_factor)
